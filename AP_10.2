#include

#include

using namespace std;

void bubbleSort(int arr[], int n)

{

int i = 0, j = 0;

for (i = 0; i < n - 1; i++)

for (j = 0; j < n - i - 1; j++)

if (arr[j] > arr[j + 1])

swap(arr[j], arr[j + 1]);

}

int search(int array[], int n, int x) {

for (int i = 0; i < n; i++)

if (array[i] == x)

return i;

return -1;

}

void printArray(int arr[], int size)

{

int i;

for (i = 0; i < size; i++)

cout << arr[i] << " ";

cout << endl;

}

int main() {

int uzd3[] = { 10 ,3, 2, 15, 12 };

int lenght3 = sizeof(uzd3) / sizeof(uzd3[0]);

printArray(uzd3, lenght3);

bubbleSort(uzd3, lenght3);

cout << endl;

int atrast = 10;

printArray(uzd3, lenght3);

int result = search(uzd3, lenght3, atrast);

(result == -1) ? cout << "Element not found" : cout << "Element found at index: " << result;

}






#include <iostream>
#include <vector>
#include <fstream>

using namespace std;
int main()
{
    // 1.	Iztaisi vektoru, kas saglabā skaitļus no 1-20
    vector<int> myVector;
    for (int i = 1; i <= 20; i++) {
        myVector.push_back(i);
    }
    // 2.	Ieraksti vektora vērtības .txt failā
    ofstream outfile("vectors.txt");
    if (outfile.is_open()) { 
        for (int i = 0; i < myVector.size(); i++) {
            outfile << myVector[i] << endl; 
        }
        outfile.close();
        cout << "File successfully written!" << endl;
    }
    else {
        cout << "Error opening file!" << endl;
    }

    // 3.	Uzraksti darbību, kas izdzēsīs visus nepāra skaitļus
    for (auto it = myVector.begin(); it != myVector.end(); ) {
        if (*it % 2 != 0) {
            it = myVector.erase(it);
        }
        else {
            ++it;
        }
    }

    // 4.	Izvadi visu atlikušo skaitļu dubultotas vērtības konsolī
    // 5.	Saglabā vērtības no 4. punkta jaunā vektorā 
    vector<int> myVector2;
    for (int i = 0; i < myVector.size(); i++) {
        cout << (myVector[i]*2) << " ";
        myVector2.push_back(myVector[i] * 2);
    }


    return 0;
}





//Izmanto iostream #include (biblioteku)

#include

#include

//Izmanto fstream

#include

//Pievieno std namespace

using namespace std;

//Deklarē main() funkciju

int main() {

//Iztaisi fstream objekto nosaucot to my_file.

fstream my_file;

//Lieto open() funkciju ar my_fail, lai varētu rakstīt failā.

my_file.open("my_file.txt", ios::out);

//Lieto if lai pārbaudīt vai fails bija iztaisīts

if (!my_file) {

//Ja fails nebija iztaisīts, informē par to lietotāju.

cout << "File not created!";

//Pabeidz if izteiksmi.

}

//Lieto else, darbībām ja fails tika iztaisīts

else {

///Informē par to lietotāju, ka fails tika iztaisīts.

cout << "File created successfully!";

//Ievada lielu enter

my_file << " ";

//Lieto close funciju, lai aizvert failu.

my_file.close();

//Aizver else izteiksmi.

}

//Uzraksti vērtību, kas būs atgriezta.

return 0;

//Aizver main funkciju.

}
